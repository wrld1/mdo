generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id           Int           @id @default(autoincrement())
  email        String        @unique
  password     String
  name         String?
  createdAt    DateTime      @default(now())
  updatedAt    DateTime      @updatedAt
  isVerified   Boolean       @default(false)
  refreshToken String?
  fraudStatus  FraudStatus   @default(CLEAR)
  metadata     Json?         @db.JsonB
  Acl          Acl[]
  companies    UserCompany[]
  objects      ObjectUser[]

  @@map("user")
}

model Company {
  id        String        @id @default(uuid())
  name      String?
  code      Int
  type      CompanyType
  status    CompanyStatus @default(PENDING)
  createdAt DateTime      @default(now())
  updatedAt DateTime      @updatedAt
  objects   Object[]
  users     UserCompany[]

  @@map("company")
}

model UserCompany {
  id        Int     @id @default(autoincrement())
  userId    Int
  companyId String
  company   Company @relation(fields: [companyId], references: [id])
  user      User    @relation(fields: [userId], references: [id])

  @@unique([userId, companyId])
}

model Object {
  id        String       @id @default(uuid())
  address   String
  type      ObjectType
  users     ObjectUser[]
  company   Company?     @relation(fields: [companyId], references: [id])
  companyId String?
  services  Service[]
}

model ObjectUser {
  id       Int    @id @default(autoincrement())
  userId   Int
  objectId String

  object Object @relation(fields: [objectId], references: [id])
  user   User   @relation(fields: [userId], references: [id])
}

model Service {
  id          Int     @id @default(autoincrement())
  name        String
  description String
  price       String
  logo        String
  object      Object? @relation(fields: [objectId], references: [id])
  objectId    String?
}

model Acl {
  id         Int           @id @default(autoincrement())
  userId     Int
  resource   String
  permission AclPermission
  user       User          @relation(fields: [userId], references: [id], onDelete: Cascade)
}

enum CompanyType {
  OSBB
  ManagingCompany
  CottageTown
}

enum AclPermission {
  READ
  WRITE
}

enum CompanyStatus {
  PENDING
  PROCESSED
  INACTIVE
  BLOCKED
}

enum ObjectType {
  ApartmentBuilding
}

enum FraudStatus {
  CLEAR
  SUSPENDED
  BLOCKED
}
